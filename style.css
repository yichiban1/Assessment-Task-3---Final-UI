body {
  margin: 0;
  height: 100vh;
  background: #111;
  color: #eee;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "STKaiti", "KaiTi", serif;
}
#poem {
  display: flex;
  flex-direction: row-reverse;
  gap: 3rem;
}
.col {
  writing-mode: vertical-rl;
  text-orientation: upright;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
.line {
  font-size: 2.4rem;
  cursor: pointer;
  transition: color 0.3s;
  animation: float 12s infinite ease-in-out;
  position: relative;
}
.line:nth-child(odd) {
  animation-duration: 10s;
}
.line:nth-child(even) {
  animation-duration: 14s;
}
@keyframes float {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(2px, -10px);
  }
  50% {
    transform: translate(-1px, -20px);
  }
  75% {
    transform: translate(-2px, -8px);
  }
  100% {
    transform: translate(0, 0);
  }
}
.line:hover {
  color: #ffcc00;
}

/* English fade-in container */
/* English horizontal - placed to the right of Chinese, no rotation, fade in */
.english-overlay {
  position: absolute;
  left: 100%; /* Close to the right side of Chinese */
  top: 50%;
  transform: translateY(-50%);
  white-space: nowrap;
  font-size: 1.2rem; /* Smaller than Chinese */
  letter-spacing: 0.02em;
  color: #ffcc00;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s;
  writing-mode: horizontal-tb;
}
.english-overlay.show {
  opacity: 1;
}

#controls {
  position: absolute;
  bottom: 20px;
  right: 20px;
  display: flex;
  gap: 10px;
}
button {
  padding: 8px 16px;
  font-size: 1rem;
  cursor: pointer;
}
/* ===== Readability patch starts ===== */
/*  Hover and the entire column lights up */
.col {
  transition: opacity 0.35s ease;
}
#poem:hover .col {
  opacity: 0.18;
  filter: saturate(0.4); /* When out of focus, add some color */
}
#poem .col:hover {
  opacity: 1;
  filter: saturate(1.3); /* More vivid when focused */
}

/* Add a very faint light column behind each column */
.col::before {
  content: "";
  position: absolute;
  inset: -8vh 0;
  width: 100%;
  background: linear-gradient(
    180deg,
    hsla(0, 0%, 100%, 0) 0%,
    hsla(0, 0%, 100%, 0.03) 50%,
    hsla(0, 0%, 100%, 0) 100%
  );
  pointer-events: none;
  z-index: -1;
}

/* English substrate frosted glass */
.english-overlay {
  background: hsla(0, 0%, 7%, 0.35);
  backdrop-filter: blur(4px);
  padding: 4px 8px;
  border-radius: 4px;
}
/* === Breathing Star Halo Patch === */
.col {
  position: relative; /* Using pseudo-elements as containers */
}
.col::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 28vh;
  height: 80vh; /* A vertical ellipse, just enough to wrap around a column */
  background: radial-gradient(
    ellipse at center,
    hsla(var(--colHue, 0), 80%, 55%, 0.18) 0%,
    hsla(var(--colHue, 0), 80%, 55%, 0) 70%
  );
  transform: translate(-50%, -50%);
  pointer-events: none;
  z-index: -1;
  animation: pulse 6s infinite ease-in-out;
}
@keyframes pulse {
  0%,
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.6;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.3;
  }
}
/* === Column theme color === */
.col:nth-child(1) {
  --colHue: 210;
} /* Dark Blue */
.col:nth-child(2) {
  --colHue: 180;
} /* Azurite */
.col:nth-child(3) {
  --colHue: 30;
} /* Chi red */
.col:nth-child(4) {
  --colHue: 45;
} /* Tao Huang */
#caption {
  position: absolute;
  top: 12vh;
  left: 50%;
  transform: translateX(-50%);
  font-size: 1rem;
  letter-spacing: 0.1em;
  opacity: 0.75;
  white-space: nowrap;
  pointer-events: none;
}
body {
  background: linear-gradient(-45deg, #111, #222, #111, #333);
  background-size: 400% 400%;
  animation: gradientShift 12s ease infinite;
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
/* ===== Close to the light ===== */
.col {
  transition: transform 0.35s ease, filter 0.35s ease;
}
.col:hover {
  transform: scale(1.05);
  filter: brightness(1.4) saturate(1.5);
}
.line::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 204, 0, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.4s, height 0.4s;
  pointer-events: none;
}

.line:active::after {
  width: 100px;
  height: 100px;
}
.line {
  opacity: 0;
  transform: translateY(20px);
  /* Two animations coexist: first emerge, then float infinitely */
  animation: fadeIn 0.8s forwards, float 12s infinite ease-in-out 0.8s;
}
.line:nth-child(1) {
  animation-delay: 0.2s;
}
.line:nth-child(2) {
  animation-delay: 0.3s;
}
.line:nth-child(3) {
  animation-delay: 0.5s;
}
.line:nth-child(4) {
  animation-delay: 0.6s;
}
.line:nth-child(5) {
  animation-delay: 0.8s;
}
.line:nth-child(6) {
  animation-delay: 0.9s;
}
.line:nth-child(7) {
  animation-delay: 1.1s;
}
.line:nth-child(8) {
  animation-delay: 1.2s;
}

@keyframes fadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
body::before {
  content: "";
  position: fixed;
  inset: 0;
  background: url('data:image/svg+xml,\
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">\
  <circle cx="10" cy="10" r="0.6" fill="white" opacity="0.15"/>\
  <circle cx="30" cy="70" r="0.5" fill="white" opacity="0.1"/>\
  <circle cx="80" cy="40" r="0.4" fill="white" opacity="0.12"/>\
  </svg>')
    repeat;
  z-index: -2;
  animation: pan 40s linear infinite; /* slowdown */
}

@keyframes pan {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100px 100px;
  }
}
/* ===== The fluorescent tail of the button===== */
button {
  transition: box-shadow 0.25s ease, transform 0.25s ease;
}
button:hover {
  transform: translateY(-2px);
  box-shadow: 0 0 8px 2px hsl(208, 79%, 17%), 0 0 20px 6px hsl(18, 100%, 40%);
}
